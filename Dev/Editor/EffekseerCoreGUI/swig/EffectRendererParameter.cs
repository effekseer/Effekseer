//------------------------------------------------------------------------------
// <auto-generated />
//
// This file was automatically generated by SWIG (http://www.swig.org).
// Version 4.0.2
//
// Do not make changes to this file unless you know what you are doing--modify
// the SWIG interface file instead.
//------------------------------------------------------------------------------

namespace Effekseer.swig {

public class EffectRendererParameter : global::System.IDisposable {
  private global::System.Runtime.InteropServices.HandleRef swigCPtr;
  protected bool swigCMemOwn;

  internal EffectRendererParameter(global::System.IntPtr cPtr, bool cMemoryOwn) {
    swigCMemOwn = cMemoryOwn;
    swigCPtr = new global::System.Runtime.InteropServices.HandleRef(this, cPtr);
  }

  internal static global::System.Runtime.InteropServices.HandleRef getCPtr(EffectRendererParameter obj) {
    return (obj == null) ? new global::System.Runtime.InteropServices.HandleRef(null, global::System.IntPtr.Zero) : obj.swigCPtr;
  }

  ~EffectRendererParameter() {
    Dispose(false);
  }

  public void Dispose() {
    Dispose(true);
    global::System.GC.SuppressFinalize(this);
  }

  protected virtual void Dispose(bool disposing) {
    lock(this) {
      if (swigCPtr.Handle != global::System.IntPtr.Zero) {
        if (swigCMemOwn) {
          swigCMemOwn = false;
          EffekseerNativePINVOKE.delete_EffectRendererParameter(swigCPtr);
        }
        swigCPtr = new global::System.Runtime.InteropServices.HandleRef(null, global::System.IntPtr.Zero);
      }
    }
  }

  public DistortionType Distortion {
    set {
      EffekseerNativePINVOKE.EffectRendererParameter_Distortion_set(swigCPtr, (int)value);
    } 
    get {
      DistortionType ret = (DistortionType)EffekseerNativePINVOKE.EffectRendererParameter_Distortion_get(swigCPtr);
      return ret;
    } 
  }

  public Matrix44F CameraMatrix {
    set {
      EffekseerNativePINVOKE.EffectRendererParameter_CameraMatrix_set(swigCPtr, Matrix44F.getCPtr(value));
    } 
    get {
      global::System.IntPtr cPtr = EffekseerNativePINVOKE.EffectRendererParameter_CameraMatrix_get(swigCPtr);
      Matrix44F ret = (cPtr == global::System.IntPtr.Zero) ? null : new Matrix44F(cPtr, false);
      return ret;
    } 
  }

  public Matrix44F ProjectionMatrix {
    set {
      EffekseerNativePINVOKE.EffectRendererParameter_ProjectionMatrix_set(swigCPtr, Matrix44F.getCPtr(value));
    } 
    get {
      global::System.IntPtr cPtr = EffekseerNativePINVOKE.EffectRendererParameter_ProjectionMatrix_get(swigCPtr);
      Matrix44F ret = (cPtr == global::System.IntPtr.Zero) ? null : new Matrix44F(cPtr, false);
      return ret;
    } 
  }

  public Vector3F CameraPosition {
    set {
      EffekseerNativePINVOKE.EffectRendererParameter_CameraPosition_set(swigCPtr, Vector3F.getCPtr(value));
    } 
    get {
      global::System.IntPtr cPtr = EffekseerNativePINVOKE.EffectRendererParameter_CameraPosition_get(swigCPtr);
      Vector3F ret = (cPtr == global::System.IntPtr.Zero) ? null : new Vector3F(cPtr, false);
      return ret;
    } 
  }

  public Vector3F CameraFrontDirection {
    set {
      EffekseerNativePINVOKE.EffectRendererParameter_CameraFrontDirection_set(swigCPtr, Vector3F.getCPtr(value));
    } 
    get {
      global::System.IntPtr cPtr = EffekseerNativePINVOKE.EffectRendererParameter_CameraFrontDirection_get(swigCPtr);
      Vector3F ret = (cPtr == global::System.IntPtr.Zero) ? null : new Vector3F(cPtr, false);
      return ret;
    } 
  }

  public Color BackgroundColor {
    set {
      EffekseerNativePINVOKE.EffectRendererParameter_BackgroundColor_set(swigCPtr, Color.getCPtr(value));
    } 
    get {
      global::System.IntPtr cPtr = EffekseerNativePINVOKE.EffectRendererParameter_BackgroundColor_get(swigCPtr);
      Color ret = (cPtr == global::System.IntPtr.Zero) ? null : new Color(cPtr, false);
      return ret;
    } 
  }

  public Vector3F LightDirection {
    set {
      EffekseerNativePINVOKE.EffectRendererParameter_LightDirection_set(swigCPtr, Vector3F.getCPtr(value));
    } 
    get {
      global::System.IntPtr cPtr = EffekseerNativePINVOKE.EffectRendererParameter_LightDirection_get(swigCPtr);
      Vector3F ret = (cPtr == global::System.IntPtr.Zero) ? null : new Vector3F(cPtr, false);
      return ret;
    } 
  }

  public Color LightColor {
    set {
      EffekseerNativePINVOKE.EffectRendererParameter_LightColor_set(swigCPtr, Color.getCPtr(value));
    } 
    get {
      global::System.IntPtr cPtr = EffekseerNativePINVOKE.EffectRendererParameter_LightColor_get(swigCPtr);
      Color ret = (cPtr == global::System.IntPtr.Zero) ? null : new Color(cPtr, false);
      return ret;
    } 
  }

  public Color LightAmbientColor {
    set {
      EffekseerNativePINVOKE.EffectRendererParameter_LightAmbientColor_set(swigCPtr, Color.getCPtr(value));
    } 
    get {
      global::System.IntPtr cPtr = EffekseerNativePINVOKE.EffectRendererParameter_LightAmbientColor_get(swigCPtr);
      Color ret = (cPtr == global::System.IntPtr.Zero) ? null : new Color(cPtr, false);
      return ret;
    } 
  }

  public RenderingMethodType RenderingMethod {
    set {
      EffekseerNativePINVOKE.EffectRendererParameter_RenderingMethod_set(swigCPtr, (int)value);
    } 
    get {
      RenderingMethodType ret = (RenderingMethodType)EffekseerNativePINVOKE.EffectRendererParameter_RenderingMethod_get(swigCPtr);
      return ret;
    } 
  }

  public bool IsGroundShown {
    set {
      EffekseerNativePINVOKE.EffectRendererParameter_IsGroundShown_set(swigCPtr, value);
    } 
    get {
      bool ret = EffekseerNativePINVOKE.EffectRendererParameter_IsGroundShown_get(swigCPtr);
      return ret;
    } 
  }

  public int GroundExtent {
    set {
      EffekseerNativePINVOKE.EffectRendererParameter_GroundExtent_set(swigCPtr, value);
    } 
    get {
      int ret = EffekseerNativePINVOKE.EffectRendererParameter_GroundExtent_get(swigCPtr);
      return ret;
    } 
  }

  public float GroundHeight {
    set {
      EffekseerNativePINVOKE.EffectRendererParameter_GroundHeight_set(swigCPtr, value);
    } 
    get {
      float ret = EffekseerNativePINVOKE.EffectRendererParameter_GroundHeight_get(swigCPtr);
      return ret;
    } 
  }

  public EffectRendererParameter() : this(EffekseerNativePINVOKE.new_EffectRendererParameter(), true) {
  }

}

}
