//------------------------------------------------------------------------------
// <auto-generated />
//
// This file was automatically generated by SWIG (http://www.swig.org).
// Version 4.0.2
//
// Do not make changes to this file unless you know what you are doing--modify
// the SWIG interface file instead.
//------------------------------------------------------------------------------

namespace Effekseer.swig {

public class EffectSetting : global::System.IDisposable {
  private global::System.Runtime.InteropServices.HandleRef swigCPtr;
  private bool swigCMemOwnBase;

  internal EffectSetting(global::System.IntPtr cPtr, bool cMemoryOwn) {
    swigCMemOwnBase = cMemoryOwn;
    swigCPtr = new global::System.Runtime.InteropServices.HandleRef(this, cPtr);
  }

  internal static global::System.Runtime.InteropServices.HandleRef getCPtr(EffectSetting obj) {
    return (obj == null) ? new global::System.Runtime.InteropServices.HandleRef(null, global::System.IntPtr.Zero) : obj.swigCPtr;
  }

  ~EffectSetting() {
    Dispose(false);
  }

  public void Dispose() {
    Dispose(true);
    global::System.GC.SuppressFinalize(this);
  }

  protected virtual void Dispose(bool disposing) {
    lock(this) {
      if (swigCPtr.Handle != global::System.IntPtr.Zero) {
        if (swigCMemOwnBase) {
          swigCMemOwnBase = false;
          EffekseerNativePINVOKE.delete_EffectSetting(swigCPtr);
        }
        swigCPtr = new global::System.Runtime.InteropServices.HandleRef(null, global::System.IntPtr.Zero);
      }
    }
  }

  public void SetCoordinateSyatem(CoordinateSystemType coordinateSystem) {
    EffekseerNativePINVOKE.EffectSetting_SetCoordinateSyatem(swigCPtr, (int)coordinateSystem);
    if (EffekseerNativePINVOKE.SWIGPendingException.Pending) throw EffekseerNativePINVOKE.SWIGPendingException.Retrieve();
  }

  public static EffectSetting Create(GraphicsDevice graphicsDevice, SoundDevice soundDevice) {
    global::System.IntPtr cPtr = EffekseerNativePINVOKE.EffectSetting_Create(GraphicsDevice.getCPtr(graphicsDevice), SoundDevice.getCPtr(soundDevice));
    EffectSetting ret = (cPtr == global::System.IntPtr.Zero) ? null : new EffectSetting(cPtr, true);
    return ret;
  }

  public EffectSetting() : this(EffekseerNativePINVOKE.new_EffectSetting(), true) {
  }

}

}
