// <auto-generated>
//  automatically generated by the FlatBuffers compiler, do not modify
// </auto-generated>

namespace Effekseer.FB.Effect
{

using global::System;
using global::System.Collections.Generic;
using global::FlatBuffers;

public enum EffectNodeType : int
{
  EffectNodeType_Root = -1,
  EffectNodeType_NoneType = 0,
  EffectNodeType_Sprite = 2,
  EffectNodeType_Ribbon = 3,
  EffectNodeType_Ring = 4,
  EffectNodeType_Model = 5,
  EffectNodeType_Track = 6,
};

public enum TranslationParentBindType : int
{
  TranslationParentBindType_NotBind = 0,
  TranslationParentBindType_WhenCreating = 1,
  TranslationParentBindType_Always = 2,
  TranslationParentBindType_NotBind_Root = 3,
  TranslationParentBindType_NotBind_FollowParent = 4,
  TranslationParentBindType_WhenCreating_FollowParent = 5,
};

public enum BindType : int
{
  BindType_NotBind = 0,
  BindType_WhenCreating = 1,
  BindType_Always = 2,
  BindType_NotBind_Root = 3,
};

public struct TextureProperty : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static void ValidateVersion() { FlatBufferConstants.FLATBUFFERS_2_0_0(); }
  public static TextureProperty GetRootAsTextureProperty(ByteBuffer _bb) { return GetRootAsTextureProperty(_bb, new TextureProperty()); }
  public static TextureProperty GetRootAsTextureProperty(ByteBuffer _bb, TextureProperty obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p = new Table(_i, _bb); }
  public TextureProperty __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public string Path { get { int o = __p.__offset(4); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
#if ENABLE_SPAN_T
  public Span<byte> GetPathBytes() { return __p.__vector_as_span<byte>(4, 1); }
#else
  public ArraySegment<byte>? GetPathBytes() { return __p.__vector_as_arraysegment(4); }
#endif
  public byte[] GetPathArray() { return __p.__vector_as_array<byte>(4); }

  public static Offset<Effekseer.FB.Effect.TextureProperty> CreateTextureProperty(FlatBufferBuilder builder,
      StringOffset pathOffset = default(StringOffset)) {
    builder.StartTable(1);
    TextureProperty.AddPath(builder, pathOffset);
    return TextureProperty.EndTextureProperty(builder);
  }

  public static void StartTextureProperty(FlatBufferBuilder builder) { builder.StartTable(1); }
  public static void AddPath(FlatBufferBuilder builder, StringOffset pathOffset) { builder.AddOffset(0, pathOffset.Value, 0); }
  public static Offset<Effekseer.FB.Effect.TextureProperty> EndTextureProperty(FlatBufferBuilder builder) {
    int o = builder.EndTable();
    return new Offset<Effekseer.FB.Effect.TextureProperty>(o);
  }
  public TexturePropertyT UnPack() {
    var _o = new TexturePropertyT();
    this.UnPackTo(_o);
    return _o;
  }
  public void UnPackTo(TexturePropertyT _o) {
    _o.Path = this.Path;
  }
  public static Offset<Effekseer.FB.Effect.TextureProperty> Pack(FlatBufferBuilder builder, TexturePropertyT _o) {
    if (_o == null) return default(Offset<Effekseer.FB.Effect.TextureProperty>);
    var _path = _o.Path == null ? default(StringOffset) : builder.CreateString(_o.Path);
    return CreateTextureProperty(
      builder,
      _path);
  }
};

public class TexturePropertyT
{
  public string Path { get; set; }

  public TexturePropertyT() {
    this.Path = null;
  }
}


}
