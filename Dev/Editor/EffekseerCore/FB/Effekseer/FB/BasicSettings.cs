// <auto-generated>
//  automatically generated by the FlatBuffers compiler, do not modify
// </auto-generated>

namespace Effekseer.FB
{

using global::System;
using global::System.Collections.Generic;
using global::FlatBuffers;

public struct BasicSettings : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static void ValidateVersion() { FlatBufferConstants.FLATBUFFERS_2_0_0(); }
  public static BasicSettings GetRootAsBasicSettings(ByteBuffer _bb) { return GetRootAsBasicSettings(_bb, new BasicSettings()); }
  public static BasicSettings GetRootAsBasicSettings(ByteBuffer _bb, BasicSettings obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p = new Table(_i, _bb); }
  public BasicSettings __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public int MaxGeneration { get { int o = __p.__offset(4); return o != 0 ? __p.bb.GetInt(o + __p.bb_pos) : (int)1; } }
  public Effekseer.FB.TranslationParentBindType TranslationBindType { get { int o = __p.__offset(6); return o != 0 ? (Effekseer.FB.TranslationParentBindType)__p.bb.GetInt(o + __p.bb_pos) : Effekseer.FB.TranslationParentBindType.TranslationParentBindType_Always; } }
  public Effekseer.FB.BindType RotationBindType { get { int o = __p.__offset(8); return o != 0 ? (Effekseer.FB.BindType)__p.bb.GetInt(o + __p.bb_pos) : Effekseer.FB.BindType.BindType_Always; } }
  public Effekseer.FB.BindType ScalingBindType { get { int o = __p.__offset(10); return o != 0 ? (Effekseer.FB.BindType)__p.bb.GetInt(o + __p.bb_pos) : Effekseer.FB.BindType.BindType_Always; } }
  public int RemoveWhenLifeIsExtinct { get { int o = __p.__offset(12); return o != 0 ? __p.bb.GetInt(o + __p.bb_pos) : (int)1; } }
  public int RemoveWhenParentIsRemoved { get { int o = __p.__offset(14); return o != 0 ? __p.bb.GetInt(o + __p.bb_pos) : (int)0; } }
  public int RemoveWhenChildrenIsExtinct { get { int o = __p.__offset(16); return o != 0 ? __p.bb.GetInt(o + __p.bb_pos) : (int)0; } }

  public static Offset<Effekseer.FB.BasicSettings> CreateBasicSettings(FlatBufferBuilder builder,
      int max_generation = 1,
      Effekseer.FB.TranslationParentBindType translation_bind_type = Effekseer.FB.TranslationParentBindType.TranslationParentBindType_Always,
      Effekseer.FB.BindType rotation_bind_type = Effekseer.FB.BindType.BindType_Always,
      Effekseer.FB.BindType scaling_bind_type = Effekseer.FB.BindType.BindType_Always,
      int remove_when_life_is_extinct = 1,
      int remove_when_parent_is_removed = 0,
      int remove_when_children_is_extinct = 0) {
    builder.StartTable(7);
    BasicSettings.AddRemoveWhenChildrenIsExtinct(builder, remove_when_children_is_extinct);
    BasicSettings.AddRemoveWhenParentIsRemoved(builder, remove_when_parent_is_removed);
    BasicSettings.AddRemoveWhenLifeIsExtinct(builder, remove_when_life_is_extinct);
    BasicSettings.AddScalingBindType(builder, scaling_bind_type);
    BasicSettings.AddRotationBindType(builder, rotation_bind_type);
    BasicSettings.AddTranslationBindType(builder, translation_bind_type);
    BasicSettings.AddMaxGeneration(builder, max_generation);
    return BasicSettings.EndBasicSettings(builder);
  }

  public static void StartBasicSettings(FlatBufferBuilder builder) { builder.StartTable(7); }
  public static void AddMaxGeneration(FlatBufferBuilder builder, int maxGeneration) { builder.AddInt(0, maxGeneration, 1); }
  public static void AddTranslationBindType(FlatBufferBuilder builder, Effekseer.FB.TranslationParentBindType translationBindType) { builder.AddInt(1, (int)translationBindType, 2); }
  public static void AddRotationBindType(FlatBufferBuilder builder, Effekseer.FB.BindType rotationBindType) { builder.AddInt(2, (int)rotationBindType, 2); }
  public static void AddScalingBindType(FlatBufferBuilder builder, Effekseer.FB.BindType scalingBindType) { builder.AddInt(3, (int)scalingBindType, 2); }
  public static void AddRemoveWhenLifeIsExtinct(FlatBufferBuilder builder, int removeWhenLifeIsExtinct) { builder.AddInt(4, removeWhenLifeIsExtinct, 1); }
  public static void AddRemoveWhenParentIsRemoved(FlatBufferBuilder builder, int removeWhenParentIsRemoved) { builder.AddInt(5, removeWhenParentIsRemoved, 0); }
  public static void AddRemoveWhenChildrenIsExtinct(FlatBufferBuilder builder, int removeWhenChildrenIsExtinct) { builder.AddInt(6, removeWhenChildrenIsExtinct, 0); }
  public static Offset<Effekseer.FB.BasicSettings> EndBasicSettings(FlatBufferBuilder builder) {
    int o = builder.EndTable();
    return new Offset<Effekseer.FB.BasicSettings>(o);
  }
};


}
