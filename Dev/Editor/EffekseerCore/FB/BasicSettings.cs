// <auto-generated>
//  automatically generated by the FlatBuffers compiler, do not modify
// </auto-generated>

namespace Effekseer.FB
{

using global::System;
using global::System.Collections.Generic;
using global::FlatBuffers;

public enum TranslationParentBindType : int
{
  TranslationParentBindType_NotBind = 0,
  TranslationParentBindType_WhenCreating = 1,
  TranslationParentBindType_Always = 2,
  TranslationParentBindType_NotBind_Root = 3,
  TranslationParentBindType_NotBind_FollowParent = 4,
  TranslationParentBindType_WhenCreating_FollowParent = 5,
};

public enum BindType : int
{
  BindType_NotBind = 0,
  BindType_WhenCreating = 1,
  BindType_Always = 2,
  BindType_NotBind_Root = 3,
};

public enum PositionType : int
{
  PositionType_None = -1,
  PositionType_Fixed = 0,
  PositionType_PVA = 1,
  PositionType_Easing = 2,
  PositionType_FCurve = 3,
  PositionType_NurbsCurve = 4,
  PositionType_ViewOffset = 5,
};

public struct BasicSettings : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static void ValidateVersion() { FlatBufferConstants.FLATBUFFERS_2_0_0(); }
  public static BasicSettings GetRootAsBasicSettings(ByteBuffer _bb) { return GetRootAsBasicSettings(_bb, new BasicSettings()); }
  public static BasicSettings GetRootAsBasicSettings(ByteBuffer _bb, BasicSettings obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p = new Table(_i, _bb); }
  public BasicSettings __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public int MaxGeneration { get { int o = __p.__offset(4); return o != 0 ? __p.bb.GetInt(o + __p.bb_pos) : (int)1; } }
  public Effekseer.FB.TranslationParentBindType TranslationBindType { get { int o = __p.__offset(6); return o != 0 ? (Effekseer.FB.TranslationParentBindType)__p.bb.GetInt(o + __p.bb_pos) : Effekseer.FB.TranslationParentBindType.TranslationParentBindType_Always; } }
  public Effekseer.FB.BindType RotationBindType { get { int o = __p.__offset(8); return o != 0 ? (Effekseer.FB.BindType)__p.bb.GetInt(o + __p.bb_pos) : Effekseer.FB.BindType.BindType_Always; } }
  public Effekseer.FB.BindType ScalingBindType { get { int o = __p.__offset(10); return o != 0 ? (Effekseer.FB.BindType)__p.bb.GetInt(o + __p.bb_pos) : Effekseer.FB.BindType.BindType_Always; } }
  public int RemoveWhenLifeIsExtinct { get { int o = __p.__offset(12); return o != 0 ? __p.bb.GetInt(o + __p.bb_pos) : (int)1; } }
  public int RemoveWhenParentIsRemoved { get { int o = __p.__offset(14); return o != 0 ? __p.bb.GetInt(o + __p.bb_pos) : (int)0; } }
  public int RemoveWhenChildrenIsExtinct { get { int o = __p.__offset(16); return o != 0 ? __p.bb.GetInt(o + __p.bb_pos) : (int)0; } }

  public static Offset<Effekseer.FB.BasicSettings> CreateBasicSettings(FlatBufferBuilder builder,
      int max_generation = 1,
      Effekseer.FB.TranslationParentBindType translation_bind_type = Effekseer.FB.TranslationParentBindType.TranslationParentBindType_Always,
      Effekseer.FB.BindType rotation_bind_type = Effekseer.FB.BindType.BindType_Always,
      Effekseer.FB.BindType scaling_bind_type = Effekseer.FB.BindType.BindType_Always,
      int remove_when_life_is_extinct = 1,
      int remove_when_parent_is_removed = 0,
      int remove_when_children_is_extinct = 0) {
    builder.StartTable(7);
    BasicSettings.AddRemoveWhenChildrenIsExtinct(builder, remove_when_children_is_extinct);
    BasicSettings.AddRemoveWhenParentIsRemoved(builder, remove_when_parent_is_removed);
    BasicSettings.AddRemoveWhenLifeIsExtinct(builder, remove_when_life_is_extinct);
    BasicSettings.AddScalingBindType(builder, scaling_bind_type);
    BasicSettings.AddRotationBindType(builder, rotation_bind_type);
    BasicSettings.AddTranslationBindType(builder, translation_bind_type);
    BasicSettings.AddMaxGeneration(builder, max_generation);
    return BasicSettings.EndBasicSettings(builder);
  }

  public static void StartBasicSettings(FlatBufferBuilder builder) { builder.StartTable(7); }
  public static void AddMaxGeneration(FlatBufferBuilder builder, int maxGeneration) { builder.AddInt(0, maxGeneration, 1); }
  public static void AddTranslationBindType(FlatBufferBuilder builder, Effekseer.FB.TranslationParentBindType translationBindType) { builder.AddInt(1, (int)translationBindType, 2); }
  public static void AddRotationBindType(FlatBufferBuilder builder, Effekseer.FB.BindType rotationBindType) { builder.AddInt(2, (int)rotationBindType, 2); }
  public static void AddScalingBindType(FlatBufferBuilder builder, Effekseer.FB.BindType scalingBindType) { builder.AddInt(3, (int)scalingBindType, 2); }
  public static void AddRemoveWhenLifeIsExtinct(FlatBufferBuilder builder, int removeWhenLifeIsExtinct) { builder.AddInt(4, removeWhenLifeIsExtinct, 1); }
  public static void AddRemoveWhenParentIsRemoved(FlatBufferBuilder builder, int removeWhenParentIsRemoved) { builder.AddInt(5, removeWhenParentIsRemoved, 0); }
  public static void AddRemoveWhenChildrenIsExtinct(FlatBufferBuilder builder, int removeWhenChildrenIsExtinct) { builder.AddInt(6, removeWhenChildrenIsExtinct, 0); }
  public static Offset<Effekseer.FB.BasicSettings> EndBasicSettings(FlatBufferBuilder builder) {
    int o = builder.EndTable();
    return new Offset<Effekseer.FB.BasicSettings>(o);
  }
};

public struct PositionSettings_Fixed : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static void ValidateVersion() { FlatBufferConstants.FLATBUFFERS_2_0_0(); }
  public static PositionSettings_Fixed GetRootAsPositionSettings_Fixed(ByteBuffer _bb) { return GetRootAsPositionSettings_Fixed(_bb, new PositionSettings_Fixed()); }
  public static PositionSettings_Fixed GetRootAsPositionSettings_Fixed(ByteBuffer _bb, PositionSettings_Fixed obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p = new Table(_i, _bb); }
  public PositionSettings_Fixed __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public int RefEq { get { int o = __p.__offset(4); return o != 0 ? __p.bb.GetInt(o + __p.bb_pos) : (int)-1; } }
  public Effekseer.FB.Vec3F? Value { get { int o = __p.__offset(6); return o != 0 ? (Effekseer.FB.Vec3F?)(new Effekseer.FB.Vec3F()).__assign(o + __p.bb_pos, __p.bb) : null; } }

  public static void StartPositionSettings_Fixed(FlatBufferBuilder builder) { builder.StartTable(2); }
  public static void AddRefEq(FlatBufferBuilder builder, int refEq) { builder.AddInt(0, refEq, -1); }
  public static void AddValue(FlatBufferBuilder builder, Offset<Effekseer.FB.Vec3F> valueOffset) { builder.AddStruct(1, valueOffset.Value, 0); }
  public static Offset<Effekseer.FB.PositionSettings_Fixed> EndPositionSettings_Fixed(FlatBufferBuilder builder) {
    int o = builder.EndTable();
    return new Offset<Effekseer.FB.PositionSettings_Fixed>(o);
  }
};

public struct PositionSettings_PVA : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static void ValidateVersion() { FlatBufferConstants.FLATBUFFERS_2_0_0(); }
  public static PositionSettings_PVA GetRootAsPositionSettings_PVA(ByteBuffer _bb) { return GetRootAsPositionSettings_PVA(_bb, new PositionSettings_PVA()); }
  public static PositionSettings_PVA GetRootAsPositionSettings_PVA(ByteBuffer _bb, PositionSettings_PVA obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p = new Table(_i, _bb); }
  public PositionSettings_PVA __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public Effekseer.FB.RefMinMax? RefEqP { get { int o = __p.__offset(4); return o != 0 ? (Effekseer.FB.RefMinMax?)(new Effekseer.FB.RefMinMax()).__assign(__p.__indirect(o + __p.bb_pos), __p.bb) : null; } }
  public Effekseer.FB.RefMinMax? RefEqV { get { int o = __p.__offset(6); return o != 0 ? (Effekseer.FB.RefMinMax?)(new Effekseer.FB.RefMinMax()).__assign(__p.__indirect(o + __p.bb_pos), __p.bb) : null; } }
  public Effekseer.FB.RefMinMax? RefEqA { get { int o = __p.__offset(8); return o != 0 ? (Effekseer.FB.RefMinMax?)(new Effekseer.FB.RefMinMax()).__assign(__p.__indirect(o + __p.bb_pos), __p.bb) : null; } }
  public Effekseer.FB.Vec3F? Pos { get { int o = __p.__offset(10); return o != 0 ? (Effekseer.FB.Vec3F?)(new Effekseer.FB.Vec3F()).__assign(o + __p.bb_pos, __p.bb) : null; } }
  public Effekseer.FB.Vec3F? Vel { get { int o = __p.__offset(12); return o != 0 ? (Effekseer.FB.Vec3F?)(new Effekseer.FB.Vec3F()).__assign(o + __p.bb_pos, __p.bb) : null; } }
  public Effekseer.FB.Vec3F? Acc { get { int o = __p.__offset(14); return o != 0 ? (Effekseer.FB.Vec3F?)(new Effekseer.FB.Vec3F()).__assign(o + __p.bb_pos, __p.bb) : null; } }

  public static void StartPositionSettings_PVA(FlatBufferBuilder builder) { builder.StartTable(6); }
  public static void AddRefEqP(FlatBufferBuilder builder, Offset<Effekseer.FB.RefMinMax> refEqPOffset) { builder.AddOffset(0, refEqPOffset.Value, 0); }
  public static void AddRefEqV(FlatBufferBuilder builder, Offset<Effekseer.FB.RefMinMax> refEqVOffset) { builder.AddOffset(1, refEqVOffset.Value, 0); }
  public static void AddRefEqA(FlatBufferBuilder builder, Offset<Effekseer.FB.RefMinMax> refEqAOffset) { builder.AddOffset(2, refEqAOffset.Value, 0); }
  public static void AddPos(FlatBufferBuilder builder, Offset<Effekseer.FB.Vec3F> posOffset) { builder.AddStruct(3, posOffset.Value, 0); }
  public static void AddVel(FlatBufferBuilder builder, Offset<Effekseer.FB.Vec3F> velOffset) { builder.AddStruct(4, velOffset.Value, 0); }
  public static void AddAcc(FlatBufferBuilder builder, Offset<Effekseer.FB.Vec3F> accOffset) { builder.AddStruct(5, accOffset.Value, 0); }
  public static Offset<Effekseer.FB.PositionSettings_PVA> EndPositionSettings_PVA(FlatBufferBuilder builder) {
    int o = builder.EndTable();
    return new Offset<Effekseer.FB.PositionSettings_PVA>(o);
  }
};

public struct PositionSettings_Easing : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static void ValidateVersion() { FlatBufferConstants.FLATBUFFERS_2_0_0(); }
  public static PositionSettings_Easing GetRootAsPositionSettings_Easing(ByteBuffer _bb) { return GetRootAsPositionSettings_Easing(_bb, new PositionSettings_Easing()); }
  public static PositionSettings_Easing GetRootAsPositionSettings_Easing(ByteBuffer _bb, PositionSettings_Easing obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p = new Table(_i, _bb); }
  public PositionSettings_Easing __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public Effekseer.FB.RefMinMax? RefEqS { get { int o = __p.__offset(4); return o != 0 ? (Effekseer.FB.RefMinMax?)(new Effekseer.FB.RefMinMax()).__assign(__p.__indirect(o + __p.bb_pos), __p.bb) : null; } }
  public Effekseer.FB.RefMinMax? RefEqW { get { int o = __p.__offset(6); return o != 0 ? (Effekseer.FB.RefMinMax?)(new Effekseer.FB.RefMinMax()).__assign(__p.__indirect(o + __p.bb_pos), __p.bb) : null; } }
  public Effekseer.FB.Vec3FEasing? Location { get { int o = __p.__offset(8); return o != 0 ? (Effekseer.FB.Vec3FEasing?)(new Effekseer.FB.Vec3FEasing()).__assign(o + __p.bb_pos, __p.bb) : null; } }

  public static void StartPositionSettings_Easing(FlatBufferBuilder builder) { builder.StartTable(3); }
  public static void AddRefEqS(FlatBufferBuilder builder, Offset<Effekseer.FB.RefMinMax> refEqSOffset) { builder.AddOffset(0, refEqSOffset.Value, 0); }
  public static void AddRefEqW(FlatBufferBuilder builder, Offset<Effekseer.FB.RefMinMax> refEqWOffset) { builder.AddOffset(1, refEqWOffset.Value, 0); }
  public static void AddLocation(FlatBufferBuilder builder, Offset<Effekseer.FB.Vec3FEasing> locationOffset) { builder.AddStruct(2, locationOffset.Value, 0); }
  public static Offset<Effekseer.FB.PositionSettings_Easing> EndPositionSettings_Easing(FlatBufferBuilder builder) {
    int o = builder.EndTable();
    return new Offset<Effekseer.FB.PositionSettings_Easing>(o);
  }
};

public struct PositionSettings_NurbsCurve : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static void ValidateVersion() { FlatBufferConstants.FLATBUFFERS_2_0_0(); }
  public static PositionSettings_NurbsCurve GetRootAsPositionSettings_NurbsCurve(ByteBuffer _bb) { return GetRootAsPositionSettings_NurbsCurve(_bb, new PositionSettings_NurbsCurve()); }
  public static PositionSettings_NurbsCurve GetRootAsPositionSettings_NurbsCurve(ByteBuffer _bb, PositionSettings_NurbsCurve obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p = new Table(_i, _bb); }
  public PositionSettings_NurbsCurve __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public int Index { get { int o = __p.__offset(4); return o != 0 ? __p.bb.GetInt(o + __p.bb_pos) : (int)0; } }
  public float Scale { get { int o = __p.__offset(6); return o != 0 ? __p.bb.GetFloat(o + __p.bb_pos) : (float)0.0f; } }
  public float MoveSpeed { get { int o = __p.__offset(8); return o != 0 ? __p.bb.GetFloat(o + __p.bb_pos) : (float)0.0f; } }
  public int LoopType { get { int o = __p.__offset(10); return o != 0 ? __p.bb.GetInt(o + __p.bb_pos) : (int)0; } }

  public static Offset<Effekseer.FB.PositionSettings_NurbsCurve> CreatePositionSettings_NurbsCurve(FlatBufferBuilder builder,
      int index = 0,
      float scale = 0.0f,
      float move_speed = 0.0f,
      int loop_type = 0) {
    builder.StartTable(4);
    PositionSettings_NurbsCurve.AddLoopType(builder, loop_type);
    PositionSettings_NurbsCurve.AddMoveSpeed(builder, move_speed);
    PositionSettings_NurbsCurve.AddScale(builder, scale);
    PositionSettings_NurbsCurve.AddIndex(builder, index);
    return PositionSettings_NurbsCurve.EndPositionSettings_NurbsCurve(builder);
  }

  public static void StartPositionSettings_NurbsCurve(FlatBufferBuilder builder) { builder.StartTable(4); }
  public static void AddIndex(FlatBufferBuilder builder, int index) { builder.AddInt(0, index, 0); }
  public static void AddScale(FlatBufferBuilder builder, float scale) { builder.AddFloat(1, scale, 0.0f); }
  public static void AddMoveSpeed(FlatBufferBuilder builder, float moveSpeed) { builder.AddFloat(2, moveSpeed, 0.0f); }
  public static void AddLoopType(FlatBufferBuilder builder, int loopType) { builder.AddInt(3, loopType, 0); }
  public static Offset<Effekseer.FB.PositionSettings_NurbsCurve> EndPositionSettings_NurbsCurve(FlatBufferBuilder builder) {
    int o = builder.EndTable();
    return new Offset<Effekseer.FB.PositionSettings_NurbsCurve>(o);
  }
};

public struct PositionSettings_ViewOffset : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static void ValidateVersion() { FlatBufferConstants.FLATBUFFERS_2_0_0(); }
  public static PositionSettings_ViewOffset GetRootAsPositionSettings_ViewOffset(ByteBuffer _bb) { return GetRootAsPositionSettings_ViewOffset(_bb, new PositionSettings_ViewOffset()); }
  public static PositionSettings_ViewOffset GetRootAsPositionSettings_ViewOffset(ByteBuffer _bb, PositionSettings_ViewOffset obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p = new Table(_i, _bb); }
  public PositionSettings_ViewOffset __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public Effekseer.FB.FloatRange? Distance { get { int o = __p.__offset(4); return o != 0 ? (Effekseer.FB.FloatRange?)(new Effekseer.FB.FloatRange()).__assign(o + __p.bb_pos, __p.bb) : null; } }

  public static void StartPositionSettings_ViewOffset(FlatBufferBuilder builder) { builder.StartTable(1); }
  public static void AddDistance(FlatBufferBuilder builder, Offset<Effekseer.FB.FloatRange> distanceOffset) { builder.AddStruct(0, distanceOffset.Value, 0); }
  public static Offset<Effekseer.FB.PositionSettings_ViewOffset> EndPositionSettings_ViewOffset(FlatBufferBuilder builder) {
    int o = builder.EndTable();
    return new Offset<Effekseer.FB.PositionSettings_ViewOffset>(o);
  }
};

public struct PositionSettings : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static void ValidateVersion() { FlatBufferConstants.FLATBUFFERS_2_0_0(); }
  public static PositionSettings GetRootAsPositionSettings(ByteBuffer _bb) { return GetRootAsPositionSettings(_bb, new PositionSettings()); }
  public static PositionSettings GetRootAsPositionSettings(ByteBuffer _bb, PositionSettings obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p = new Table(_i, _bb); }
  public PositionSettings __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public Effekseer.FB.PositionType Type { get { int o = __p.__offset(4); return o != 0 ? (Effekseer.FB.PositionType)__p.bb.GetInt(o + __p.bb_pos) : Effekseer.FB.PositionType.PositionType_Fixed; } }
  public Effekseer.FB.PositionSettings_Fixed? Fixed { get { int o = __p.__offset(6); return o != 0 ? (Effekseer.FB.PositionSettings_Fixed?)(new Effekseer.FB.PositionSettings_Fixed()).__assign(__p.__indirect(o + __p.bb_pos), __p.bb) : null; } }
  public Effekseer.FB.PositionSettings_PVA? Pva { get { int o = __p.__offset(8); return o != 0 ? (Effekseer.FB.PositionSettings_PVA?)(new Effekseer.FB.PositionSettings_PVA()).__assign(__p.__indirect(o + __p.bb_pos), __p.bb) : null; } }

  public static Offset<Effekseer.FB.PositionSettings> CreatePositionSettings(FlatBufferBuilder builder,
      Effekseer.FB.PositionType type = Effekseer.FB.PositionType.PositionType_Fixed,
      Offset<Effekseer.FB.PositionSettings_Fixed> fixedOffset = default(Offset<Effekseer.FB.PositionSettings_Fixed>),
      Offset<Effekseer.FB.PositionSettings_PVA> pvaOffset = default(Offset<Effekseer.FB.PositionSettings_PVA>)) {
    builder.StartTable(3);
    PositionSettings.AddPva(builder, pvaOffset);
    PositionSettings.AddFixed(builder, fixedOffset);
    PositionSettings.AddType(builder, type);
    return PositionSettings.EndPositionSettings(builder);
  }

  public static void StartPositionSettings(FlatBufferBuilder builder) { builder.StartTable(3); }
  public static void AddType(FlatBufferBuilder builder, Effekseer.FB.PositionType type) { builder.AddInt(0, (int)type, 0); }
  public static void AddFixed(FlatBufferBuilder builder, Offset<Effekseer.FB.PositionSettings_Fixed> fixedOffset) { builder.AddOffset(1, fixedOffset.Value, 0); }
  public static void AddPva(FlatBufferBuilder builder, Offset<Effekseer.FB.PositionSettings_PVA> pvaOffset) { builder.AddOffset(2, pvaOffset.Value, 0); }
  public static Offset<Effekseer.FB.PositionSettings> EndPositionSettings(FlatBufferBuilder builder) {
    int o = builder.EndTable();
    return new Offset<Effekseer.FB.PositionSettings>(o);
  }
};

public struct TextureProperty : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static void ValidateVersion() { FlatBufferConstants.FLATBUFFERS_2_0_0(); }
  public static TextureProperty GetRootAsTextureProperty(ByteBuffer _bb) { return GetRootAsTextureProperty(_bb, new TextureProperty()); }
  public static TextureProperty GetRootAsTextureProperty(ByteBuffer _bb, TextureProperty obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p = new Table(_i, _bb); }
  public TextureProperty __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public string Path { get { int o = __p.__offset(4); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
#if ENABLE_SPAN_T
  public Span<byte> GetPathBytes() { return __p.__vector_as_span<byte>(4, 1); }
#else
  public ArraySegment<byte>? GetPathBytes() { return __p.__vector_as_arraysegment(4); }
#endif
  public byte[] GetPathArray() { return __p.__vector_as_array<byte>(4); }

  public static Offset<Effekseer.FB.TextureProperty> CreateTextureProperty(FlatBufferBuilder builder,
      StringOffset pathOffset = default(StringOffset)) {
    builder.StartTable(1);
    TextureProperty.AddPath(builder, pathOffset);
    return TextureProperty.EndTextureProperty(builder);
  }

  public static void StartTextureProperty(FlatBufferBuilder builder) { builder.StartTable(1); }
  public static void AddPath(FlatBufferBuilder builder, StringOffset pathOffset) { builder.AddOffset(0, pathOffset.Value, 0); }
  public static Offset<Effekseer.FB.TextureProperty> EndTextureProperty(FlatBufferBuilder builder) {
    int o = builder.EndTable();
    return new Offset<Effekseer.FB.TextureProperty>(o);
  }
};

public struct Node : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static void ValidateVersion() { FlatBufferConstants.FLATBUFFERS_2_0_0(); }
  public static Node GetRootAsNode(ByteBuffer _bb) { return GetRootAsNode(_bb, new Node()); }
  public static Node GetRootAsNode(ByteBuffer _bb, Node obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p = new Table(_i, _bb); }
  public Node __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public Effekseer.FB.BasicSettings? BasicSettings { get { int o = __p.__offset(4); return o != 0 ? (Effekseer.FB.BasicSettings?)(new Effekseer.FB.BasicSettings()).__assign(__p.__indirect(o + __p.bb_pos), __p.bb) : null; } }
  public Effekseer.FB.Node? Children(int j) { int o = __p.__offset(6); return o != 0 ? (Effekseer.FB.Node?)(new Effekseer.FB.Node()).__assign(__p.__indirect(__p.__vector(o) + j * 4), __p.bb) : null; }
  public int ChildrenLength { get { int o = __p.__offset(6); return o != 0 ? __p.__vector_len(o) : 0; } }

  public static Offset<Effekseer.FB.Node> CreateNode(FlatBufferBuilder builder,
      Offset<Effekseer.FB.BasicSettings> basic_settingsOffset = default(Offset<Effekseer.FB.BasicSettings>),
      VectorOffset childrenOffset = default(VectorOffset)) {
    builder.StartTable(2);
    Node.AddChildren(builder, childrenOffset);
    Node.AddBasicSettings(builder, basic_settingsOffset);
    return Node.EndNode(builder);
  }

  public static void StartNode(FlatBufferBuilder builder) { builder.StartTable(2); }
  public static void AddBasicSettings(FlatBufferBuilder builder, Offset<Effekseer.FB.BasicSettings> basicSettingsOffset) { builder.AddOffset(0, basicSettingsOffset.Value, 0); }
  public static void AddChildren(FlatBufferBuilder builder, VectorOffset childrenOffset) { builder.AddOffset(1, childrenOffset.Value, 0); }
  public static VectorOffset CreateChildrenVector(FlatBufferBuilder builder, Offset<Effekseer.FB.Node>[] data) { builder.StartVector(4, data.Length, 4); for (int i = data.Length - 1; i >= 0; i--) builder.AddOffset(data[i].Value); return builder.EndVector(); }
  public static VectorOffset CreateChildrenVectorBlock(FlatBufferBuilder builder, Offset<Effekseer.FB.Node>[] data) { builder.StartVector(4, data.Length, 4); builder.Add(data); return builder.EndVector(); }
  public static void StartChildrenVector(FlatBufferBuilder builder, int numElems) { builder.StartVector(4, numElems, 4); }
  public static Offset<Effekseer.FB.Node> EndNode(FlatBufferBuilder builder) {
    int o = builder.EndTable();
    return new Offset<Effekseer.FB.Node>(o);
  }
};

public struct Effect : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static void ValidateVersion() { FlatBufferConstants.FLATBUFFERS_2_0_0(); }
  public static Effect GetRootAsEffect(ByteBuffer _bb) { return GetRootAsEffect(_bb, new Effect()); }
  public static Effect GetRootAsEffect(ByteBuffer _bb, Effect obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p = new Table(_i, _bb); }
  public Effect __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public Effekseer.FB.TextureProperty? Textures(int j) { int o = __p.__offset(4); return o != 0 ? (Effekseer.FB.TextureProperty?)(new Effekseer.FB.TextureProperty()).__assign(__p.__indirect(__p.__vector(o) + j * 4), __p.bb) : null; }
  public int TexturesLength { get { int o = __p.__offset(4); return o != 0 ? __p.__vector_len(o) : 0; } }
  public Effekseer.FB.Node? RootNode { get { int o = __p.__offset(6); return o != 0 ? (Effekseer.FB.Node?)(new Effekseer.FB.Node()).__assign(__p.__indirect(o + __p.bb_pos), __p.bb) : null; } }

  public static Offset<Effekseer.FB.Effect> CreateEffect(FlatBufferBuilder builder,
      VectorOffset texturesOffset = default(VectorOffset),
      Offset<Effekseer.FB.Node> root_nodeOffset = default(Offset<Effekseer.FB.Node>)) {
    builder.StartTable(2);
    Effect.AddRootNode(builder, root_nodeOffset);
    Effect.AddTextures(builder, texturesOffset);
    return Effect.EndEffect(builder);
  }

  public static void StartEffect(FlatBufferBuilder builder) { builder.StartTable(2); }
  public static void AddTextures(FlatBufferBuilder builder, VectorOffset texturesOffset) { builder.AddOffset(0, texturesOffset.Value, 0); }
  public static VectorOffset CreateTexturesVector(FlatBufferBuilder builder, Offset<Effekseer.FB.TextureProperty>[] data) { builder.StartVector(4, data.Length, 4); for (int i = data.Length - 1; i >= 0; i--) builder.AddOffset(data[i].Value); return builder.EndVector(); }
  public static VectorOffset CreateTexturesVectorBlock(FlatBufferBuilder builder, Offset<Effekseer.FB.TextureProperty>[] data) { builder.StartVector(4, data.Length, 4); builder.Add(data); return builder.EndVector(); }
  public static void StartTexturesVector(FlatBufferBuilder builder, int numElems) { builder.StartVector(4, numElems, 4); }
  public static void AddRootNode(FlatBufferBuilder builder, Offset<Effekseer.FB.Node> rootNodeOffset) { builder.AddOffset(1, rootNodeOffset.Value, 0); }
  public static Offset<Effekseer.FB.Effect> EndEffect(FlatBufferBuilder builder) {
    int o = builder.EndTable();
    return new Offset<Effekseer.FB.Effect>(o);
  }
};


}
